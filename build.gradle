buildscript {
    ext {
        springBootVersion = '1.2.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'project-report'

jar {
    baseName = 'dockermanager'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.security:spring-security-ldap:3.2.5.RELEASE")
    compile("org.apache.directory.server:apacheds-server-jndi:1.5.5")
    compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.codehaus.groovy:groovy-all")
    compile group: 'org.codehaus.groovy.modules.http-builder', name: 'http-builder', version: '0.7'
    compile 'com.jayway.jsonpath:json-path:1.2.0'
    compile 'com.netflix.feign:feign-core:8.0.0-rc.1'
    compile 'com.netflix.feign:feign-jackson:8.0.0-rc.1'
    compile 'com.github.docker-java:docker-java:1.0.0'
	runtime("com.h2database:h2")
    testCompile("org.springframework.boot:spring-boot-starter-test") 
}

configurations {
    all*.exclude group: 'bouncycastle', module: "bcprov-jdk15"
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
